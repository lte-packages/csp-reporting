[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "csp-reporting"
version = "0.3.0"
description = "A basic Python project for npm/GitHub distribution."
authors = [
    { name="horrocksm", email="mikeh_74_@outlook.com" }
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "Django>=4.2",
    "django-csp>=4.0"
]

# Setuptools-specific configuration for package discovery
[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]

[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    ".venv",
    "venv",
    "migrations",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "S",    # bandit security
    "C4",   # flake8-comprehensions
    "DJ",   # flake8-django
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "S101",  # use of assert (OK in tests)
    "S106",  # hardcoded password (OK in tests/examples)
    "DJ001",  # nullable CharField should have null=True
    "T201",  # print statement (OK in management commands)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports
"tests/*" = ["S101", "S106", "S311"]  # Allow asserts, hardcoded passwords, and pseudo-random generators in tests
"*/migrations/*" = ["N806", "N999"]  # Allow non-lowercase variables in migrations
"django_critical_css/management/commands/*" = ["T201"]  # Allow print in management commands

[tool.ruff.lint.isort]
known-first-party = ["django_critical_css"]
known-third-party = ["django", "celery", "redis"]

[tool.ruff.lint.mccabe]
max-complexity = 10
